(window.webpackJsonp=window.webpackJsonp||[]).push([[18],{502:function(t,e,a){"use strict";a.r(e);var n=a(21),i=Object(n.a)({},(function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("blockquote",[a("p",[t._v("说明：万事开头难，贵在坚持啊。")])]),t._v(" "),a("h2",{attrs:{id:"一、什么是jetpack"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#一、什么是jetpack"}},[t._v("#")]),t._v(" 一、什么是Jetpack？")]),t._v(" "),a("p",[t._v("2018年谷歌I/O 发布了一系列辅助Android开发者的实用工具，合称Jetpack，以帮助开发者构建出色的 Android 应用。")]),t._v(" "),a("p",[t._v("官方JetPack介绍")]),t._v(" "),a("p",[t._v("大体上，JetPack是Google推出的一些库的集合。是Android基础支持库SDK以外的部分。包含了组件、工具、架构方案等...开发者可以自主按需选择接入具体的哪个库。")]),t._v(" "),a("p",[t._v("Goole IO 2017：Google 开始推出Architecture Component, ORM库Room, 用户生命周期管理的ViewModel/ListData。")]),t._v(" "),a("p",[t._v("Goole IO 2018：将Support lib 更名为androidx，Google将许多正确的方案集中起来，以高效的开发Android APP。")]),t._v(" "),a("p",[t._v("以上种种，现在统称为JetPack.其最核心的出发点就是帮助开发者快速构建出稳定、高性能、测试友好同时向后兼容的APP。")]),t._v(" "),a("p",[t._v("使用Jetpack的优势：")]),t._v(" "),a("p",[t._v("​    1）加快开发速度")]),t._v(" "),a("p",[t._v("​    2）消除样板代码")]),t._v(" "),a("p",[t._v("​    3）编译功能强大的优质应用")]),t._v(" "),a("h2",{attrs:{id:"二、jetpack的组成"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#二、jetpack的组成"}},[t._v("#")]),t._v(" 二、Jetpack的组成")]),t._v(" "),a("p",[t._v("Android Jetpack 组件覆盖以下 "),a("strong",[t._v("4 个方面")]),t._v("：")]),t._v(" "),a("ul",[a("li",[t._v("Foundation （基础组件）")]),t._v(" "),a("li",[t._v("Architecture（架构组件）")]),t._v(" "),a("li",[t._v("Behavior（行为组件）")]),t._v(" "),a("li",[t._v("UI（界面组件）")])]),t._v(" "),a("p",[a("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/wyba/image_store/blog/20200113204219609.jpeg",alt:"img"}})]),t._v(" "),a("ol",[a("li",[a("p",[t._v("基础组件")]),t._v(" "),a("p",[t._v("AppCompat：使得支持较低的 Android 版本。从以前继承 Activity 到现在继承 AppCompatActivity 就是属于这一部分\nAndroid KTX：Kotlin 的扩展支持库\nMultidex：多 dex 文件支持\nTest：测试支持库")])]),t._v(" "),a("li",[a("p",[t._v("架构组件")]),t._v(" "),a("p",[t._v("Data Binding：MVVM 的一种实践\nLifecycles：管理你的 Activity 和 Fragment 生命周期\nLiveData：通过观察者模式感知数据变化，类比 RxJava\nNavigation：处理 Fragment 导航相关逻辑\nPaging：分页数据加载方案\nRoom：官方 ORM 库\nViewModel：通过数据驱动 V 视图发生改变\nWorkManager：管理后台任务")])]),t._v(" "),a("li",[a("p",[t._v("行为组件")]),t._v(" "),a("p",[t._v("DownloadManager：管理下载任务\nMedia App：多媒体播放和一些向后兼容的API。主要包含 MediaPlayer 和 ExoPlayer\nNotifications：提供向后兼容的通知 API，支持 Wear 和 Auto\nPermissions：权限管理，这个应该都接触过。用于检查和请求应用权限\nSettings：Preference 相关 API。基本每个应用都会用到\nShare Action：提供分享操作。这块在国内使用的不多，都是自己封装或者采用第三方方案\nSlices：可以让应用通过外部（其他 APP）显示 APP 界面（通过设备自带的搜索，语音助手等）")])]),t._v(" "),a("li",[a("p",[t._v("界面组件")]),t._v(" "),a("p",[t._v("Animations and Transitions：动画，界面转场等\nAuto：针对车辆的标准化界面和模式\nEmoji：表情符号相关\nFragment：基础概念\nLayout：基础概念\nPalette-Colors：调色板\nTV：Android TV 开发相关\nWear：可穿戴设备（目前主要是手表）开发相关")]),t._v(" "),a("h2",{attrs:{id:"三、对jetpack理解"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#三、对jetpack理解"}},[t._v("#")]),t._v(" 三、对Jetpack理解")])]),t._v(" "),a("li",[a("p",[t._v("它是一套组件库。"),a("em",[t._v("（说明它是由许多个不同的组件库构成，并不是一个单一的组件库）")])])]),t._v(" "),a("li",[a("p",[t._v("使用 Jetpack 可以帮助我们在不同的 Android 版本和不同的设备上，实现行为一致的工作代码。（说明 Jetpack 可以轻松的处理由 Android 版本不一致和设备不同产生的差异性和兼容性问题）")])])])])}),[],!1,null,null,null);e.default=i.exports}}]);