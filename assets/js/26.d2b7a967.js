(window.webpackJsonp=window.webpackJsonp||[]).push([[26],{510:function(t,a,e){"use strict";e.r(a);var n=e(21),r=Object(n.a)({},(function(){var t=this,a=t.$createElement,e=t._self._c||a;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("blockquote",[e("p",[t._v("醉了")])]),t._v(" "),e("h2",{attrs:{id:"_1、fragment的生命周期"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1、fragment的生命周期"}},[t._v("#")]),t._v(" 1、Fragment的生命周期")]),t._v(" "),e("p",[t._v("onAttach\nFragment和Activity建立关联的时候调用。")]),t._v(" "),e("p",[t._v("onCreate\n始化Fragment。可通过参数savedInstanceState获取之前保存的值。")]),t._v(" "),e("p",[t._v("onCreateView\nFragment加载布局时调用。加载布局和findViewById的操作通常在此函数内完成，但是不建议执行耗时的操作，比如读取数据库数据列表。")]),t._v(" "),e("p",[t._v("onActivityCreated\n当Activity中的onCreate方法执行完后调用。")]),t._v(" "),e("p",[t._v("onStart\n执行该方法时，Fragment由不可见变为可见状态。")]),t._v(" "),e("p",[t._v("onResume\n执行该方法时，Fragment处于活动状态，用户可与之交互。")]),t._v(" "),e("p",[t._v("onPause\n执行该方法时，Fragment处于暂停状态，但依然可见，用户不能与之交互。")]),t._v(" "),e("p",[t._v("onStop\n执行该方法时，Fragment完全不可见")]),t._v(" "),e("p",[t._v("onDestroyView\nFragment中的布局被移除时调用。销毁与Fragment有关的视图，但未与Activity解除绑定，依然可以通过onCreateView方法重新创建视图。通常在ViewPager+Fragment的方式下会调用此方法。")]),t._v(" "),e("p",[t._v("onDestroy\n销毁Fragment。通常按Back键退出或者Fragment被回收时调用此方法。")]),t._v(" "),e("p",[t._v("onDetach\nFragment和Activity解除关联的时候调用。在onDestroy方法之后调用。")]),t._v(" "),e("p",[e("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/wyba/image_store/blog/20140719225005356",alt:"img"}})]),t._v(" "),e("p",[e("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/wyba/image_store/blog/20200408202026772.png",alt:"fragment生命周期"}})]),t._v(" "),e("h2",{attrs:{id:"_2、fragmentpageradapter-与-与-fragmentstatepageradapter-的区别与使用场景"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2、fragmentpageradapter-与-与-fragmentstatepageradapter-的区别与使用场景"}},[t._v("#")]),t._v(" 2、FragmentPagerAdapter 与 与 FragmentStatePagerAdapter 的区别与使用场景？")]),t._v(" "),e("p",[t._v("FragmentPagerAdapter 的每个 Fragment 会持久的保存在 FragmentManager 中，只要用户可以返回到页面中，它都不会被销毁。因此适用于那些数据 相对静态的页，Fragment 数量也比较少的那种;")]),t._v(" "),e("p",[t._v("FragmentStatePagerAdapter 只保留当前页面，当页面不可见时，该 Fragment 就会被消除，释放其资源。因此适用于那些 数据动态性较大、 占用内存较多，多 Fragment 的情况；")]),t._v(" "),e("h2",{attrs:{id:"_3、fragment-的-replace-和-add-方法的区别"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_3、fragment-的-replace-和-add-方法的区别"}},[t._v("#")]),t._v(" 3、Fragment 的 replace 和 add 方法的区别")]),t._v(" "),e("p",[t._v("add不会重新初始化fragment,replace每次都会；")]),t._v(" "),e("p",[t._v("添加相同的fragment时，replace不会有任何变化，add会报IllegalStateException 异常；")]),t._v(" "),e("p",[t._v("replace 先 remove 去掉相同 id 的所有 fragment，然后在add 当前的这个 fragment，而 add 是覆盖前一个fragment。所以如果使用 add 一般会伴随 hide()和show()，避免布局重叠；")]),t._v(" "),e("p",[t._v("使用 add，如果应用放在后台，或以其他方式被系统销毁，再打开时，hide()中引用的 fragment 会销毁，所以依然会出现布局重叠 bug，可以使用 replace 或使用 add时，添加一个 tag 参数；")]),t._v(" "),e("h2",{attrs:{id:"_4、fragment-如何实现类似-activity-栈的压栈和出栈效果的"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_4、fragment-如何实现类似-activity-栈的压栈和出栈效果的"}},[t._v("#")]),t._v(" 4、Fragment 如何实现类似 Activity 栈的压栈和出栈效果的？")]),t._v(" "),e("p",[t._v("Fragment 的事物管理器内部维持了一个双向链表结构，该结构可以记录我们每次 add 的Fragment 和 replace 的 Fragment，然后当我们点击 back 按钮的时候会自动帮我们实现退栈操作。")]),t._v(" "),e("h2",{attrs:{id:"_5、如何切换-fragement-不重新实例化"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_5、如何切换-fragement-不重新实例化"}},[t._v("#")]),t._v(" 5、如何切换 fragement,不重新实例化")]),t._v(" "),e("p",[t._v("翻看了 Android 官方 Doc，和一些组件的源代码，发现 replace()这个方法只是在上一个 Fragment不再需要时采用的简便方法.")]),t._v(" "),e("p",[t._v("正确的切换方式是 add()，切换时 hide()，add()另一个 Fragment；再次切换时，只需 hide()当前，show()另一个。")]),t._v(" "),e("p",[t._v("这样就能做到多个 Fragment 切换不重新实例化：")]),t._v(" "),e("h2",{attrs:{id:"_6、fragment的特点"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_6、fragment的特点"}},[t._v("#")]),t._v(" 6、Fragment的特点")]),t._v(" "),e("p",[t._v("Fragment是一种可以嵌入在Activity当中的UI片段")]),t._v(" "),e("p",[t._v("用来组建Activity界面的局部模块, 也可以说一个Actiivty界面可以由多个Fragment组成")]),t._v(" "),e("p",[t._v("其行为与Activity很相似, 有自己对应的布局(包含具体的View), 它有自己的生命周期，接收自己的输入事件，并且可以从运行中的activity中添加或移除")]),t._v(" "),e("p",[t._v("一个fragment必须总是嵌入在一个activity中，同时fragment的生命周期受activity的影响")]),t._v(" "),e("p",[t._v("本质上会产生一个FrameLayout,它加载的布局为其子布局")]),t._v(" "),e("p",[t._v("优势：")]),t._v(" "),e("p",[t._v("模块化：我们不必把所有代码全部写在Activity中，而是把代码写在各自的Fragment中。")]),t._v(" "),e("p",[t._v("可重用：多个Activity可以重用一个Fragment。")]),t._v(" "),e("p",[t._v("可适配：根据硬件的屏幕尺寸、屏幕方向，能够方便地实现不同的布局，这样用户体验更好。")]),t._v(" "),e("h2",{attrs:{id:"_7、fragment通信"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_7、fragment通信"}},[t._v("#")]),t._v(" 7、Fragment通信")]),t._v(" "),e("p",[t._v("简单方式一：先调用findFragmentById()方法根据id获得fragment的对象，然后调用fragment中的方法进行赋值.")]),t._v(" "),e("p",[t._v("简单方式二:通过接口回调的方法实现另个fragment之间的通信")]),t._v(" "),e("p",[t._v("EventBus：使用方便，但其使用的是反射原理，会有稍微的延迟，并且他人维护不方便；")]),t._v(" "),e("p",[t._v("static静态变量：使用方便，但是，每个static变量都会占用一块内存区，Android系统分配给每个App的内存是有限的（63M），过多很容易造成App内存溢出；")]),t._v(" "),e("h2",{attrs:{id:"_8、为什么不建议直接通过使用new-fragment的方式传入数据"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_8、为什么不建议直接通过使用new-fragment的方式传入数据"}},[t._v("#")]),t._v(" 8、为什么不建议直接通过使用new Fragment的方式传入数据")]),t._v(" "),e("p",[t._v("Fragment的生命周期依附在Activity中,如果Activity为null,那么Fragment肯定要出事儿.")]),t._v(" "),e("p",[t._v("手机屏幕竖屏横屏切换,导致Activity重建了,于是Fragment中的所有原先传递过去的值也会失去.也就是说tokenId这个时候是空的,或者变为原本的默认值.")]),t._v(" "),e("p",[t._v("既然知道了原理,具体怎么用? 当然是利用Bundle和这个setArguments(bundle)方法,在构造Fragment的方法中加入:")]),t._v(" "),e("div",{staticClass:"language-java line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-java"}},[e("code",[e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Bundle")]),t._v(" bundle "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Bundle")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nbundle"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("putString")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"key"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" value"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \nfragment"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("setArguments")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("bundle"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br")])]),e("p",[t._v("在Fragment的周期方法,比如onCreateView()中去取出Bundle就行喇.")]),t._v(" "),e("div",{staticClass:"language-java line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-java"}},[e("code",[e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" value "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("getArguments")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("getString")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"key"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br")])])])}),[],!1,null,null,null);a.default=r.exports}}]);