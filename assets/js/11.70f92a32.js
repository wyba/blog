(window.webpackJsonp=window.webpackJsonp||[]).push([[11],{495:function(n,s,e){"use strict";e.r(s);var a=e(21),t=Object(a.a)({},(function(){var n=this,s=n.$createElement,e=n._self._c||s;return e("ContentSlotsDistributor",{attrs:{"slot-key":n.$parent.slotKey}},[e("blockquote",[e("p",[n._v("说明：由于物联网开发经常用到，代码经过了一个个版本的磨炼，开发总结一下。")])]),n._v(" "),e("h2",{attrs:{id:"_1-获取以太网mac"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1-获取以太网mac"}},[n._v("#")]),n._v(" 1.获取以太网mac")]),n._v(" "),e("p",[n._v("先获取以太网的mac，不行的话就获取wifi的mac")]),n._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v('public static String getLocalMacAddress() {\n        String mac = "";\n        try {\n            String path = "sys/class/net/eth0/address";\n            FileInputStream fis_name = new FileInputStream(path);\n            byte[] buffer_name = new byte[1024 * 8];\n            int byteCount_name = fis_name.read(buffer_name);\n            if (byteCount_name > 0) {\n                mac = new String(buffer_name, 0, byteCount_name, "utf-8");\n            }\n\n            if (mac.length() == 0) {\n                path = "sys/class/net/eth0/wlan0";\n                FileInputStream fis = new FileInputStream(path);\n                byte[] buffer = new byte[1024 * 8];\n                int byteCount = fis.read(buffer);\n                if (byteCount > 0) {\n                    mac = new String(buffer, 0, byteCount, "utf-8");\n                }\n            }\n\n        } catch (Exception e) {\n            e.printStackTrace();\n        }\n        System.out.println("mac=====" + mac);\n        return mac.trim();\n    }\n\n')])]),n._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[n._v("1")]),e("br"),e("span",{staticClass:"line-number"},[n._v("2")]),e("br"),e("span",{staticClass:"line-number"},[n._v("3")]),e("br"),e("span",{staticClass:"line-number"},[n._v("4")]),e("br"),e("span",{staticClass:"line-number"},[n._v("5")]),e("br"),e("span",{staticClass:"line-number"},[n._v("6")]),e("br"),e("span",{staticClass:"line-number"},[n._v("7")]),e("br"),e("span",{staticClass:"line-number"},[n._v("8")]),e("br"),e("span",{staticClass:"line-number"},[n._v("9")]),e("br"),e("span",{staticClass:"line-number"},[n._v("10")]),e("br"),e("span",{staticClass:"line-number"},[n._v("11")]),e("br"),e("span",{staticClass:"line-number"},[n._v("12")]),e("br"),e("span",{staticClass:"line-number"},[n._v("13")]),e("br"),e("span",{staticClass:"line-number"},[n._v("14")]),e("br"),e("span",{staticClass:"line-number"},[n._v("15")]),e("br"),e("span",{staticClass:"line-number"},[n._v("16")]),e("br"),e("span",{staticClass:"line-number"},[n._v("17")]),e("br"),e("span",{staticClass:"line-number"},[n._v("18")]),e("br"),e("span",{staticClass:"line-number"},[n._v("19")]),e("br"),e("span",{staticClass:"line-number"},[n._v("20")]),e("br"),e("span",{staticClass:"line-number"},[n._v("21")]),e("br"),e("span",{staticClass:"line-number"},[n._v("22")]),e("br"),e("span",{staticClass:"line-number"},[n._v("23")]),e("br"),e("span",{staticClass:"line-number"},[n._v("24")]),e("br"),e("span",{staticClass:"line-number"},[n._v("25")]),e("br"),e("span",{staticClass:"line-number"},[n._v("26")]),e("br"),e("span",{staticClass:"line-number"},[n._v("27")]),e("br"),e("span",{staticClass:"line-number"},[n._v("28")]),e("br")])]),e("h2",{attrs:{id:"_2-获取以太网ip"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2-获取以太网ip"}},[n._v("#")]),n._v(" 2.获取以太网ip")]),n._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v('public static String getIpAddressForInterfaces() {\n\n        String interfaceName = "eth0";\n\n        try {\n            Enumeration<NetworkInterface> enNetworkInterface = NetworkInterface.getNetworkInterfaces(); //获取本机所有的网络接口\n            while (enNetworkInterface.hasMoreElements()) {  //判断 Enumeration 对象中是否还有数据\n                NetworkInterface networkInterface = enNetworkInterface.nextElement();   //获取 Enumeration 对象中的下一个数据\n                if (!networkInterface.isUp()) { // 判断网口是否在使用\n                    continue;\n                }\n                if (!interfaceName.equals(networkInterface.getDisplayName())) { // 网口名称是否和需要的相同\n                    continue;\n                }\n                Enumeration<InetAddress> enInetAddress = networkInterface.getInetAddresses();   //getInetAddresses 方法返回绑定到该网卡的所有的 IP 地址。\n                while (enInetAddress.hasMoreElements()) {\n                    InetAddress inetAddress = enInetAddress.nextElement();\n                    if (inetAddress instanceof Inet4Address) {  //判断是否未ipv4\n                        return inetAddress.getHostAddress();\n                    }\n                }\n            }\n        } catch (Exception e) {\n            e.printStackTrace();\n        }\n        return "0.0.0.0";\n    }\n\n')])]),n._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[n._v("1")]),e("br"),e("span",{staticClass:"line-number"},[n._v("2")]),e("br"),e("span",{staticClass:"line-number"},[n._v("3")]),e("br"),e("span",{staticClass:"line-number"},[n._v("4")]),e("br"),e("span",{staticClass:"line-number"},[n._v("5")]),e("br"),e("span",{staticClass:"line-number"},[n._v("6")]),e("br"),e("span",{staticClass:"line-number"},[n._v("7")]),e("br"),e("span",{staticClass:"line-number"},[n._v("8")]),e("br"),e("span",{staticClass:"line-number"},[n._v("9")]),e("br"),e("span",{staticClass:"line-number"},[n._v("10")]),e("br"),e("span",{staticClass:"line-number"},[n._v("11")]),e("br"),e("span",{staticClass:"line-number"},[n._v("12")]),e("br"),e("span",{staticClass:"line-number"},[n._v("13")]),e("br"),e("span",{staticClass:"line-number"},[n._v("14")]),e("br"),e("span",{staticClass:"line-number"},[n._v("15")]),e("br"),e("span",{staticClass:"line-number"},[n._v("16")]),e("br"),e("span",{staticClass:"line-number"},[n._v("17")]),e("br"),e("span",{staticClass:"line-number"},[n._v("18")]),e("br"),e("span",{staticClass:"line-number"},[n._v("19")]),e("br"),e("span",{staticClass:"line-number"},[n._v("20")]),e("br"),e("span",{staticClass:"line-number"},[n._v("21")]),e("br"),e("span",{staticClass:"line-number"},[n._v("22")]),e("br"),e("span",{staticClass:"line-number"},[n._v("23")]),e("br"),e("span",{staticClass:"line-number"},[n._v("24")]),e("br"),e("span",{staticClass:"line-number"},[n._v("25")]),e("br"),e("span",{staticClass:"line-number"},[n._v("26")]),e("br"),e("span",{staticClass:"line-number"},[n._v("27")]),e("br"),e("span",{staticClass:"line-number"},[n._v("28")]),e("br")])]),e("h2",{attrs:{id:"_3-获取以太网网关"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_3-获取以太网网关"}},[n._v("#")]),n._v(" 3.获取以太网网关")]),n._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v('public static String getGateWay() {\n        String[] arr;\n        try {\n            Process process = Runtime.getRuntime().exec("ip route list table 0");\n            BufferedReader in = new BufferedReader(new InputStreamReader(process.getInputStream()));\n            String string = in.readLine();\n            arr = string.split("\\\\s+");\n            return arr[2];\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n        return "0.0.0.0";\n    }\n\n')])]),n._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[n._v("1")]),e("br"),e("span",{staticClass:"line-number"},[n._v("2")]),e("br"),e("span",{staticClass:"line-number"},[n._v("3")]),e("br"),e("span",{staticClass:"line-number"},[n._v("4")]),e("br"),e("span",{staticClass:"line-number"},[n._v("5")]),e("br"),e("span",{staticClass:"line-number"},[n._v("6")]),e("br"),e("span",{staticClass:"line-number"},[n._v("7")]),e("br"),e("span",{staticClass:"line-number"},[n._v("8")]),e("br"),e("span",{staticClass:"line-number"},[n._v("9")]),e("br"),e("span",{staticClass:"line-number"},[n._v("10")]),e("br"),e("span",{staticClass:"line-number"},[n._v("11")]),e("br"),e("span",{staticClass:"line-number"},[n._v("12")]),e("br"),e("span",{staticClass:"line-number"},[n._v("13")]),e("br"),e("span",{staticClass:"line-number"},[n._v("14")]),e("br")])]),e("h2",{attrs:{id:"_4-获取子网掩码"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_4-获取子网掩码"}},[n._v("#")]),n._v(" 4.获取子网掩码")]),n._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v('/*获取子网掩码*/\n    public static String getIpAddressMaskForInterfaces() {\n\n        String interfaceName = "eth0";\n\n        try {\n            //获取本机所有的网络接口\n            Enumeration<NetworkInterface> networkInterfaceEnumeration = NetworkInterface.getNetworkInterfaces();\n            //判断 Enumeration 对象中是否还有数据\n            while (networkInterfaceEnumeration.hasMoreElements()) {\n\n                //获取 Enumeration 对象中的下一个数据\n                NetworkInterface networkInterface = networkInterfaceEnumeration.nextElement();\n                if (!networkInterface.isUp() && !interfaceName.equals(networkInterface.getDisplayName())) {\n\n                    //判断网口是否在使用，判断是否时我们获取的网口\n                    continue;\n                }\n\n                for (InterfaceAddress interfaceAddress : networkInterface.getInterfaceAddresses()) {\n                    if (interfaceAddress.getAddress() instanceof Inet4Address) {\n\n                        //仅仅处理ipv4\n                        //获取掩码位数，通过 calcMaskByPrefixLength 转换为字符串\n                        return calcMaskByPrefixLength(interfaceAddress.getNetworkPrefixLength());\n                    }\n                }\n            }\n        } catch (SocketException e) {\n\n            e.printStackTrace();\n        }\n\n        return "0.0.0.0";\n    }\n\n    /*通过子网掩码的位数计算子网掩码*/\n    private static String calcMaskByPrefixLength(int length) {\n\n        int mask = 0xffffffff << (32 - length);\n        int partsNum = 4;\n        int bitsOfPart = 8;\n        int maskParts[] = new int[partsNum];\n        int selector = 0x000000ff;\n\n        for (int i = 0; i < maskParts.length; i++) {\n\n            int pos = maskParts.length - 1 - i;\n            maskParts[pos] = (mask >> (i * bitsOfPart)) & selector;\n        }\n\n        String result = "";\n        result = result + maskParts[0];\n\n        for (int i = 1; i < maskParts.length; i++) {\n\n            result = result + "." + maskParts[i];\n        }\n\n        return result;\n    }\n\n')])]),n._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[n._v("1")]),e("br"),e("span",{staticClass:"line-number"},[n._v("2")]),e("br"),e("span",{staticClass:"line-number"},[n._v("3")]),e("br"),e("span",{staticClass:"line-number"},[n._v("4")]),e("br"),e("span",{staticClass:"line-number"},[n._v("5")]),e("br"),e("span",{staticClass:"line-number"},[n._v("6")]),e("br"),e("span",{staticClass:"line-number"},[n._v("7")]),e("br"),e("span",{staticClass:"line-number"},[n._v("8")]),e("br"),e("span",{staticClass:"line-number"},[n._v("9")]),e("br"),e("span",{staticClass:"line-number"},[n._v("10")]),e("br"),e("span",{staticClass:"line-number"},[n._v("11")]),e("br"),e("span",{staticClass:"line-number"},[n._v("12")]),e("br"),e("span",{staticClass:"line-number"},[n._v("13")]),e("br"),e("span",{staticClass:"line-number"},[n._v("14")]),e("br"),e("span",{staticClass:"line-number"},[n._v("15")]),e("br"),e("span",{staticClass:"line-number"},[n._v("16")]),e("br"),e("span",{staticClass:"line-number"},[n._v("17")]),e("br"),e("span",{staticClass:"line-number"},[n._v("18")]),e("br"),e("span",{staticClass:"line-number"},[n._v("19")]),e("br"),e("span",{staticClass:"line-number"},[n._v("20")]),e("br"),e("span",{staticClass:"line-number"},[n._v("21")]),e("br"),e("span",{staticClass:"line-number"},[n._v("22")]),e("br"),e("span",{staticClass:"line-number"},[n._v("23")]),e("br"),e("span",{staticClass:"line-number"},[n._v("24")]),e("br"),e("span",{staticClass:"line-number"},[n._v("25")]),e("br"),e("span",{staticClass:"line-number"},[n._v("26")]),e("br"),e("span",{staticClass:"line-number"},[n._v("27")]),e("br"),e("span",{staticClass:"line-number"},[n._v("28")]),e("br"),e("span",{staticClass:"line-number"},[n._v("29")]),e("br"),e("span",{staticClass:"line-number"},[n._v("30")]),e("br"),e("span",{staticClass:"line-number"},[n._v("31")]),e("br"),e("span",{staticClass:"line-number"},[n._v("32")]),e("br"),e("span",{staticClass:"line-number"},[n._v("33")]),e("br"),e("span",{staticClass:"line-number"},[n._v("34")]),e("br"),e("span",{staticClass:"line-number"},[n._v("35")]),e("br"),e("span",{staticClass:"line-number"},[n._v("36")]),e("br"),e("span",{staticClass:"line-number"},[n._v("37")]),e("br"),e("span",{staticClass:"line-number"},[n._v("38")]),e("br"),e("span",{staticClass:"line-number"},[n._v("39")]),e("br"),e("span",{staticClass:"line-number"},[n._v("40")]),e("br"),e("span",{staticClass:"line-number"},[n._v("41")]),e("br"),e("span",{staticClass:"line-number"},[n._v("42")]),e("br"),e("span",{staticClass:"line-number"},[n._v("43")]),e("br"),e("span",{staticClass:"line-number"},[n._v("44")]),e("br"),e("span",{staticClass:"line-number"},[n._v("45")]),e("br"),e("span",{staticClass:"line-number"},[n._v("46")]),e("br"),e("span",{staticClass:"line-number"},[n._v("47")]),e("br"),e("span",{staticClass:"line-number"},[n._v("48")]),e("br"),e("span",{staticClass:"line-number"},[n._v("49")]),e("br"),e("span",{staticClass:"line-number"},[n._v("50")]),e("br"),e("span",{staticClass:"line-number"},[n._v("51")]),e("br"),e("span",{staticClass:"line-number"},[n._v("52")]),e("br"),e("span",{staticClass:"line-number"},[n._v("53")]),e("br"),e("span",{staticClass:"line-number"},[n._v("54")]),e("br"),e("span",{staticClass:"line-number"},[n._v("55")]),e("br"),e("span",{staticClass:"line-number"},[n._v("56")]),e("br"),e("span",{staticClass:"line-number"},[n._v("57")]),e("br"),e("span",{staticClass:"line-number"},[n._v("58")]),e("br"),e("span",{staticClass:"line-number"},[n._v("59")]),e("br"),e("span",{staticClass:"line-number"},[n._v("60")]),e("br"),e("span",{staticClass:"line-number"},[n._v("61")]),e("br"),e("span",{staticClass:"line-number"},[n._v("62")]),e("br")])])])}),[],!1,null,null,null);s.default=t.exports}}]);